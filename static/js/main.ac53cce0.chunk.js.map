{"version":3,"sources":["MyButton.js","InputPane.js","Tree.js","OutputPane.js","App.js","serviceWorker.js","index.js"],"names":["MyButton","props","Button","type","basic","InputPane","loadFile","onItemsChange","reader","FileReader","onload","result","split","line","items","readAsText","refFileInput","current","files","loadGBKFile","bytes","string","TextDecoder","decode","readAsArrayBuffer","addNewOne","state","newOne","includes","setState","render","Tab","Pane","children","ref","accept","style","display","onChange","event","fileName","target","name","Table","compact","Header","Row","HeaderCell","Input","fluid","readOnly","placeholder","kind","toUpperCase","slice","value","onClick","click","positive","disabled","collapsing","Body","map","item","index","key","Cell","Group","icon","length","negative","Footer","React","createRef","Component","Tree","rootNode","quot","traceBack","node","depth","yNode","zNode","isFirstChild","isLastChild","xStr","firstNode","from","nodes","rows","rowsAtCol","i","undefined","colSpan","to","textAlign","verticalAlign","padding","width","height","borderSpacing","borderTop","borderRight","child","push","margin","row","rowIndex","OutputPane","simpleRules","rules","ruleParts","ruleLeft","ruleRight","binaryRules","forEach","rule","ruleIndex","itemNow","itemIndex","itemNew","extend","results","trees","samples","sample","words","t","j","k","filter","f","root","sampleIndex","resultIndex","Modal","size","trigger","content","actions","App","handleRulesChange","newRules","handleSamplesChange","newSamples","handleQuotChange","e","rulePaneRender","Message","List","Item","Radio","label","Label","checked","samplePaneRender","rootPaneRender","labelPosition","resultPaneRender","Container","as","panes","menuItem","link","horizontal","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac53cce0.chunk.js","sourcesContent":["import React from 'react'\nimport { Button } from \"semantic-ui-react\";\n\nexport function MyButton(props) {\n    return <Button type=\"button\" basic {...props}/>\n}","import React, { Component } from \"react\"\nimport { Input, Button, Table, Tab } from 'semantic-ui-react'\nimport { MyButton } from './MyButton'\n\nexport class InputPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { fileName: \"\", newOne: \"\"}\n    this.refFileInput = React.createRef()\n  }\n\n  loadFile = () => {\n    this.props.onItemsChange([])\n    const reader = new FileReader()\n    reader.onload = () => {\n      for (let line of reader.result.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/))\n        if (line.split(\";\")[0] !== \"\")\n          this.props.onItemsChange([...this.props.items, line.split(\";\")[0]])\n    }\n    reader.readAsText(this.refFileInput.current.files[0])\n  }\n\n  loadGBKFile = () => {\n    this.props.onItemsChange([])\n    const reader = new FileReader()\n    reader.onload = () => {\n      const bytes = reader.result\n      const gbkDecoder = new TextDecoder('gbk')\n      const string = gbkDecoder.decode(bytes)\n      for (let line of string.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/))\n        if (line.split(\";\")[0] !== \"\")\n          this.props.onItemsChange([...this.props.items, line.split(\";\")[0]])\n    }\n    reader.readAsArrayBuffer(this.refFileInput.current.files[0])\n  }\n\n  addNewOne = () => {\n    if (this.state.newOne !== \"\" && !this.props.items.includes(this.state.newOne)) {\n      this.props.onItemsChange([...this.props.items, this.state.newOne])\n      this.setState({ newOne: \"\" })\n    }\n  }\n\n  render = () => <Tab.Pane>\n    {this.props.children}\n    <input ref={this.refFileInput} type=\"file\" accept=\"text/plain\" style={{ display: \"none\" }} onChange={(event) => this.setState({ fileName: event.target.files[0].name })} />\n    <Table compact=\"very\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>\n            <Input fluid readOnly placeholder={this.props.kind[0].toUpperCase() + this.props.kind.slice(1) + \" file\"} value={this.state.fileName} onClick={() => this.refFileInput.current.click()}/>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <MyButton positive fluid onClick={this.loadFile} disabled={this.state.fileName === \"\"}>{\"Load \" + this.props.kind + \" file\"}</MyButton>\n          </Table.HeaderCell>\n          <Table.HeaderCell collapsing>\n            <MyButton positive fluid onClick={this.loadGBKFile} disabled={this.state.fileName === \"\"}>{\"Load GBK \" + this.props.kind + \" file\"}</MyButton>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {this.props.items.map((item, index) => <Table.Row key={index}>\n          <Table.Cell>\n            <Input fluid value={item} onChange={(event) => this.props.onItemsChange([...this.props.items.slice(0, index), event.target.value, ...this.props.items.slice(index + 1)])}/>\n          </Table.Cell>\n          <Table.Cell>\n            <Button.Group>\n              <MyButton icon=\"angle double up\" onClick={() => this.props.onItemsChange([this.props.items[index], ...this.props.items.slice(0, index), ...this.props.items.slice(index + 1)])} disabled={index === 0}/>\n              <MyButton icon=\"angle up\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index - 1), this.props.items[index], this.props.items[index - 1], ...this.props.items.slice(index + 1)])} disabled={index === 0}/>\n              <MyButton icon=\"angle down\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), this.props.items[index + 1], this.props.items[index], ...this.props.items.slice(index + 2)])} disabled={index === this.props.items.length - 1}/>\n              <MyButton icon=\"angle double down\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), ...this.props.items.slice(index + 1), this.props.items[index]])} disabled={index === this.props.items.length - 1}/>\n            </Button.Group>\n          </Table.Cell>\n          <Table.Cell>\n            <MyButton negative fluid onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), ...this.props.items.slice(index + 1)])}>Remove</MyButton>\n          </Table.Cell>\n        </Table.Row>)}\n      </Table.Body>\n      <Table.Footer>\n        <Table.Row>\n          <Table.HeaderCell>\n            <Input fluid placeholder={\"New \" + this.props.kind} value={this.state.newOne} onChange={(event) => this.setState({ newOne: event.target.value })}/>\n          </Table.HeaderCell>\n          <Table.HeaderCell collapsing>\n            <MyButton positive fluid onClick={this.addNewOne} disabled={this.state.newOne === \"\"}>{\"Add new \" + this.props.kind}</MyButton>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <MyButton negative fluid onClick={() => this.props.onItemsChange([])} disabled={this.props.items.length === 0}>Remove all</MyButton>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  </Tab.Pane>\n}","import React from 'react'\n\nexport function Tree(props) {\n    const { rootNode, quot } = props\n\n    function traceBack(node, depth) {\n        node.depth = depth\n        if (node.yNode === null) {\n            node.children = []\n            return\n        }\n        if (node.zNode === null) {\n            node.children = [node.yNode]\n            node.yNode.isFirstChild = true\n            node.yNode.isLastChild = true\n            traceBack(node.yNode, depth + 1)\n            return\n        }\n        if (node.xStr[0] === \"_\") {\n            traceBack(node.yNode, depth)\n            traceBack(node.zNode, depth)\n            return\n        }\n        \n        let firstNode = node.yNode\n        node.children = [node.zNode]\n        node.zNode.isFirstChild = false\n        node.zNode.isLastChild = true\n        while (firstNode.xStr[0] === \"_\") {\n            node.children = [firstNode.zNode, ...node.children]\n            firstNode.zNode.isFirstChild = false\n            firstNode.zNode.isLastChild = false\n            firstNode = firstNode.yNode\n        }\n        node.from = firstNode.from\n        node.children = [firstNode, ...node.children]\n        firstNode.isFirstChild = true\n        firstNode.isLastChild = false\n            \n        traceBack(node.yNode, depth + 1)\n        traceBack(node.zNode, depth + 1)\n    }\n\n    traceBack(rootNode, 0)\n\n    let nodes = [rootNode]\n    let rows = []\n    let rowsAtCol = []\n    let i = 0\n    while (i < nodes.length) {\n        if (rows[nodes[i].depth] === undefined) {\n            rows[nodes[i].depth] = <></>\n            rowsAtCol[nodes[i].depth] = 0\n        }\n        if (nodes[i].xStr[0] !== \"_\") {\n            if (rowsAtCol[nodes[i].depth] < nodes[i].from)\n                rows[nodes[i].depth] = <>{rows[nodes[i].depth]}<td colSpan={nodes[i].from - rowsAtCol[nodes[i].depth]}></td></>\n            rows[nodes[i].depth] = (<>\n                {rows[nodes[i].depth]}<td key={i} colSpan={nodes[i].to - nodes[i].from} style={{textAlign: \"center\", verticalAlign: \"top\", padding: \"0\"}}>\n                    {nodes[i].depth === 0 ? <></> : <table style={{width: \"100%\", height: \"1em\", borderSpacing: \"0\"}}><tbody><tr>\n                        <td style={{width: \"50%\", borderTop: nodes[i].isFirstChild ? \"none\" : \"1px solid\", borderRight: \"1px solid\"}}></td>\n                        <td style={{width: \"50%\", borderTop: nodes[i].isLastChild ? \"none\" : \"1px solid\"}}></td>\n                    </tr></tbody></table>}\n                    <div>&emsp;{(nodes[i].children.length === 0 && quot.length > 0) ? nodes[i].xStr.slice(quot.length, -quot.length) : nodes[i].xStr}&emsp;</div>\n                    {nodes[i].children.length === 0 ? <></> : <table style={{width: \"100%\", height: \"1em\", borderSpacing: \"0\"}}><tbody><tr>\n                        <td style={{width: \"50%\", borderRight: \"1px solid\"}}></td>\n                        <td style={{width: \"50%\"}}></td>\n                    </tr></tbody></table>}\n                </td>\n            </>)\n            rowsAtCol[nodes[i].depth] = nodes[i].to\n        }\n        for (let child of nodes[i].children) \n            nodes.push(child)\n        i ++\n    }\n\n    return <table style={{margin: \"auto\", borderSpacing: \"0\"}}>\n        <tbody>{rows.map((row, rowIndex) => <tr key={rowIndex}>{row}</tr>)}</tbody>\n    </table>\n}","import React, { Fragment } from \"react\"\nimport { Modal, Tab, Table } from 'semantic-ui-react'\nimport { MyButton } from \"./MyButton\"\nimport { Tree } from \"./Tree\"\n\nexport function OutputPane(props) {\n  // complex to simple (without \"|\")\n  let simpleRules = []\n  for (let rule of props.rules) {\n    const ruleParts = rule.split(\" -> \")\n    const ruleLeft = ruleParts[0]\n    for (let ruleRight of ruleParts[1].split(\" | \")) {\n      simpleRules.push([ruleLeft, ruleRight])\n    }\n  }\n  \n  // multiple to binary\n  let binaryRules = []\n  simpleRules.forEach((rule, ruleIndex) => {\n    const items = rule[1].split(\" \")\n    if (items.length === 1) {\n      binaryRules.push([rule[0], items[0], \"\"])\n    } else {\n      let itemNow = items[0]\n      items.slice(1, -1).forEach((item, itemIndex) => {\n        const itemNew = `_${ruleIndex}_${itemIndex}`\n        binaryRules.push([itemNew, itemNow, item])\n        itemNow = itemNew\n      })\n      binaryRules.push([rule[0], itemNow, items[items.length - 1]])\n    }\n  })\n\n  // CKY-parse\n  const extend = (firstNode) => {\n    let nodes = [firstNode]\n    let i = 0\n    while (i < nodes.length) {\n      for (let rule of binaryRules)\n        if (rule[1] === nodes[i].xStr && rule[2] === \"\")\n          nodes.push({ xStr: rule[0], yNode: nodes[i], zNode: null, from: firstNode.from, to: firstNode.to })\n      i ++\n    }\n    return nodes\n  }\n\n  const traceBack = (node) => {\n    if (node.yNode === null)\n      return <>{(props.quot.length === 0) ? node.xStr : node.xStr.slice(props.quot.length, -props.quot.length)}</>\n    if (node.zNode === null)\n      return <>[<sub><em>{node.xStr}</em></sub> {traceBack(node.yNode)}]</>\n    if (node.xStr[0] === \"_\")\n      return <>{traceBack(node.yNode)} {traceBack(node.zNode)}</>\n    return <>[<sub><em>{node.xStr}</em></sub> {traceBack(node.yNode)} {traceBack(node.zNode)}]</>\n  }\n  \n  let results = []\n  let trees = []\n  props.samples.forEach((sample, index) => {\n    const words = sample.split(\" \")\n    let t = []\n    for (let j = 1; j <= words.length; j++) {\n      t[j - 1] = []\n      t[j - 1][j] = extend({xStr: props.quot + words[j - 1] + props.quot, yNode: null, zNode: null, from: j - 1, to: j})\n      for (let i = j - 2; i >= 0; i--) {\n        t[i][j] = []\n        for (let k = i + 1; k < j; k++)\n          for (let rule of binaryRules)\n            for (let yNode of t[i][k].filter((node) => node.xStr === rule[1]))\n              for (let zNode of t[k][j].filter((node) => node.xStr === rule[2]))\n                t[i][j].push(...extend({xStr: rule[0], yNode: yNode, zNode: zNode, from: i, to: j }))\n      }\n    }\n    results[index] = []\n    trees[index] = []\n    for (let node of t[0][words.length].filter((node) => node.xStr === props.root)) {\n      results[index].push(traceBack(node))\n      trees[index].push(<Tree rootNode={node} quot={props.quot}></Tree>)\n    }\n  })\n\n  return <Tab.Pane>\n    <Table compact=\"very\">\n      {/* <Table.Header><Table.Row>\n        <Table.HeaderCell colSpan=\"2\">Total: {props.samples.length} samples</Table.HeaderCell>\n      </Table.Row></Table.Header> */}\n      <Table.Body>{props.samples.map((sample, sampleIndex) =>\n        <Fragment key={sampleIndex}>\n          <Table.Row positive={results[sampleIndex].length > 0} negative={results[sampleIndex].length === 0}>\n            <Table.Cell>{sample}</Table.Cell>\n            <Table.Cell>{results[sampleIndex].length === 0 ? \"No\" : results[sampleIndex].length} result{results[sampleIndex].length === 1 ? \"\" : \"s\"}</Table.Cell>\n          </Table.Row>\n          {results[sampleIndex].map((result, resultIndex) => <Table.Row key={resultIndex}>\n            <Table.Cell>{result}</Table.Cell>\n            <Table.Cell collapsing><Modal basic size=\"fullscreen\" trigger={<MyButton>Show tree</MyButton>} content={trees[sampleIndex][resultIndex]} actions={['Close']} /></Table.Cell>\n          </Table.Row>)}\n        </Fragment>)}\n      </Table.Body>\n    </Table>\n  </Tab.Pane>\n}","import React, { Component } from 'react'\nimport { Container, Header, Input, List, Message, Tab, Radio, Label } from 'semantic-ui-react'\nimport { InputPane } from \"./InputPane\"\nimport { OutputPane } from \"./OutputPane\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {rules: [], samples: [], root: \"S\", quot: ''}\n  }\n\n  handleRulesChange = (newRules) => this.setState({ rules: newRules })\n\n  handleSamplesChange = (newSamples) => this.setState({ samples: newSamples })\n\n  handleQuotChange = (e, { value }) => this.setState({ quot: value })\n\n  rulePaneRender = () => <InputPane key=\"rule\" kind=\"rule\" items={this.state.rules} onItemsChange={this.handleRulesChange}>\n    <Message><Message.List>\n      <Message.Item>\n        Non-terminal symbols are:&emsp;\n        <Radio\n            label={<label>bare, e.g. <Label>{`DP -> the NP`}</Label>.</label>}\n            name='quotRadioGroup' value='' checked={this.state.quot === ''} onChange={this.handleQuotChange}\n        />\n        &emsp;\n        <Radio\n          label={<label>wrapped in ASCII quotation marks (\"), e.g. <Label>{`DP -> \"the\" NP`}</Label>.</label>}\n          name='quotRadioGroup' value='\"' checked={this.state.quot === '\"'} onChange={this.handleQuotChange}\n        />\n      </Message.Item>\n      <Message.Item>Rules with the same left-hand side can be joined with vertical lines (|), e.g. <Label>{`NP -> N | AdjP N | N PP | AdjP N PP`}</Label>.</Message.Item>\n    </Message.List></Message>\n  </InputPane>\n\n  samplePaneRender = () => <InputPane key=\"sample\" kind=\"sample\" items={this.state.samples} onItemsChange={this.handleSamplesChange}>\n    <Message><Message.List><Message.Item>Terminal symbols should be space-separated, e.g. <Label>王冕 死 了 父亲</Label>.</Message.Item></Message.List></Message>\n  </InputPane>\n\n  rootPaneRender = () => <Tab.Pane>\n    <Input labelPosition='left' value={this.state.root} onChange={event => this.setState({root: event.target.value})}><Label>Start symbol</Label><input /></Input>\n  </Tab.Pane>\n\n  resultPaneRender = () => <OutputPane rules={this.state.rules} samples={this.state.samples} root={this.state.root} quot={this.state.quot} />\n\n  render = () =>\n    <Container>\n      <br />\n      <Header as=\"h1\">CFG parser</Header>\n      <Tab panes={[\n        { menuItem: \"Set rules\", render: this.rulePaneRender },\n        { menuItem: \"Set samples\", render: this.samplePaneRender },\n        { menuItem: \"Set start symbol\", render: this.rootPaneRender },\n        { menuItem: \"Parse\", render: this.resultPaneRender }\n      ]} />\n      \n      <Container textAlign='center'><br /><List link horizontal><List.Item>Version 201021</List.Item></List></Container>\n      \n    </Container>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}