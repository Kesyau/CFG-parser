{"version":3,"sources":["MyButton.js","InputTable.js","Tree.js","OutputPane.js","App.js","serviceWorker.js","index.js"],"names":["MyButton","props","Button","type","basic","InputTable","loadFile","onItemsChange","reader","FileReader","onload","result","split","line","items","readAsText","refFileInput","current","files","loadGBKFile","bytes","string","TextDecoder","decode","readAsArrayBuffer","addNewOne","state","newOne","includes","setState","render","Table","compact","Header","Row","HeaderCell","ref","accept","style","display","onChange","event","fileName","target","name","Input","fluid","readOnly","placeholder","kind","toUpperCase","slice","value","onClick","click","positive","disabled","collapsing","Body","map","item","index","key","Cell","Group","icon","length","negative","Footer","React","createRef","Component","Tree","rootNode","quot","traceBack","node","depth","yNode","zNode","children","isFirstChild","isLastChild","xStr","firstNode","from","nodes","rows","rowsAtCol","i","undefined","colSpan","to","textAlign","verticalAlign","padding","width","height","borderSpacing","borderTop","borderRight","child","push","margin","row","rowIndex","OutputPane","simpleRules","rules","ruleParts","ruleLeft","ruleRight","binaryRules","forEach","rule","ruleIndex","itemNow","itemIndex","itemNew","extend","results","trees","samples","sample","words","t","j","k","filter","f","root","Tab","Pane","sampleIndex","resultIndex","Modal","size","trigger","content","actions","Accordion","styled","defaultActiveIndex","panels","title","Message","join","App","handleRulesChange","newRules","handleSamplesChange","newSamples","handleQuotChange","e","rulePaneRender","List","Item","Radio","label","Label","checked","samplePaneRender","rootPaneRender","labelPosition","resultPaneRender","Container","as","panes","menuItem","link","horizontal","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAGO,SAASA,EAASC,GACrB,OAAO,kBAACC,EAAA,EAAD,eAAQC,KAAK,SAASC,OAAK,GAAKH,ICApC,IAAMI,EAAb,kDACE,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAKRK,SAAW,WACT,EAAKL,MAAMM,cAAc,IACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAAO,IAAD,gBACHF,EAAOG,OAAOC,MAAM,oCADjB,IACpB,gCAASC,EAAT,QAC6B,KAAvBA,EAAKD,MAAM,KAAK,IAClB,EAAKX,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,OAAxC,CAA+CD,EAAKD,MAAM,KAAK,OAH/C,gCAKtBJ,EAAOO,WAAW,EAAKC,aAAaC,QAAQC,MAAM,KAdjC,EAiBnBC,YAAc,WACZ,EAAKlB,MAAMM,cAAc,IACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IADoB,EACdU,EAAQZ,EAAOG,OAEfU,EADa,IAAIC,YAAY,OACTC,OAAOH,GAHb,cAIHC,EAAOT,MAAM,oCAJV,IAIpB,gCAASC,EAAT,QAC6B,KAAvBA,EAAKD,MAAM,KAAK,IAClB,EAAKX,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,OAAxC,CAA+CD,EAAKD,MAAM,KAAK,OAN/C,gCAQtBJ,EAAOgB,kBAAkB,EAAKR,aAAaC,QAAQC,MAAM,KA5BxC,EA+BnBO,UAAY,WACgB,KAAtB,EAAKC,MAAMC,QAAkB,EAAK1B,MAAMa,MAAMc,SAAS,EAAKF,MAAMC,UACpE,EAAK1B,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,OAAxC,CAA+C,EAAKY,MAAMC,UAC1D,EAAKE,SAAS,CAAEF,OAAQ,OAlCT,EAsCnBG,OAAS,kBAAM,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAC5B,kBAACD,EAAA,EAAME,OAAP,KAAc,kBAACF,EAAA,EAAMG,IAAP,KACZ,kBAACH,EAAA,EAAMI,WAAP,KACE,2BAAOC,IAAK,EAAKpB,aAAcb,KAAK,OAAOkC,OAAO,aAAaC,MAAO,CAAEC,QAAS,QAAUC,SAAU,SAACC,GAAD,OAAW,EAAKZ,SAAS,CAAEa,SAAUD,EAAME,OAAOzB,MAAM,GAAG0B,UAChK,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAACC,YAAa,EAAK/C,MAAMgD,KAAK,GAAGC,cAAgB,EAAKjD,MAAMgD,KAAKE,MAAM,GAAK,QAASC,MAAO,EAAK1B,MAAMgB,SAAUW,QAAS,kBAAM,EAAKrC,aAAaC,QAAQqC,YAEjL,kBAACvB,EAAA,EAAMI,WAAP,KACE,kBAACnC,EAAD,CAAUuD,UAAQ,EAACT,OAAK,EAACO,QAAS,EAAK/C,SAAUkD,SAAkC,KAAxB,EAAK9B,MAAMgB,UAAkB,QAAU,EAAKzC,MAAMgD,KAAO,UAEtH,kBAAClB,EAAA,EAAMI,WAAP,CAAkBsB,YAAU,GAC1B,kBAACzD,EAAD,CAAUuD,UAAQ,EAACT,OAAK,EAACO,QAAS,EAAKlC,YAAaqC,SAAkC,KAAxB,EAAK9B,MAAMgB,UAAkB,YAAc,EAAKzC,MAAMgD,KAAO,YAG/H,kBAAClB,EAAA,EAAM2B,KAAP,KACG,EAAKzD,MAAMa,MAAM6C,KAAI,SAACC,EAAMC,GAAP,OAAiB,kBAAC9B,EAAA,EAAMG,IAAP,CAAW4B,IAAKD,GACrD,kBAAC9B,EAAA,EAAMgC,KAAP,KACE,kBAAClB,EAAA,EAAD,CAAOC,OAAK,EAACM,MAAOQ,EAAMpB,SAAU,SAACC,GAAD,OAAW,EAAKxC,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,MAAMqC,MAAM,EAAGU,IAAvD,CAA+DpB,EAAME,OAAOS,OAA5E,YAAsF,EAAKnD,MAAMa,MAAMqC,MAAMU,EAAQ,UAEtK,kBAAC9B,EAAA,EAAMgC,KAAP,KACE,kBAAC7D,EAAA,EAAO8D,MAAR,KACE,kBAAChE,EAAD,CAAUiE,KAAK,kBAAkBZ,QAAS,kBAAM,EAAKpD,MAAMM,cAAX,CAA0B,EAAKN,MAAMa,MAAM+C,IAA3C,mBAAsD,EAAK5D,MAAMa,MAAMqC,MAAM,EAAGU,IAAhF,YAA2F,EAAK5D,MAAMa,MAAMqC,MAAMU,EAAQ,OAAML,SAAoB,IAAVK,IAC1L,kBAAC7D,EAAD,CAAUiE,KAAK,WAAWZ,QAAS,kBAAM,EAAKpD,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,MAAMqC,MAAM,EAAGU,EAAQ,IAA/D,CAAmE,EAAK5D,MAAMa,MAAM+C,GAAQ,EAAK5D,MAAMa,MAAM+C,EAAQ,IAArH,YAA4H,EAAK5D,MAAMa,MAAMqC,MAAMU,EAAQ,OAAML,SAAoB,IAAVK,IACpN,kBAAC7D,EAAD,CAAUiE,KAAK,aAAaZ,QAAS,kBAAM,EAAKpD,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,MAAMqC,MAAM,EAAGU,IAAvD,CAA+D,EAAK5D,MAAMa,MAAM+C,EAAQ,GAAI,EAAK5D,MAAMa,MAAM+C,IAA7G,YAAwH,EAAK5D,MAAMa,MAAMqC,MAAMU,EAAQ,OAAML,SAAUK,IAAU,EAAK5D,MAAMa,MAAMoD,OAAS,IACtP,kBAAClE,EAAD,CAAUiE,KAAK,oBAAoBZ,QAAS,kBAAM,EAAKpD,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,MAAMqC,MAAM,EAAGU,IAAvD,YAAkE,EAAK5D,MAAMa,MAAMqC,MAAMU,EAAQ,IAAjG,CAAqG,EAAK5D,MAAMa,MAAM+C,OAAUL,SAAUK,IAAU,EAAK5D,MAAMa,MAAMoD,OAAS,MAGpO,kBAACnC,EAAA,EAAMgC,KAAP,KACE,kBAAC/D,EAAD,CAAUmE,UAAQ,EAACrB,OAAK,EAACO,QAAS,kBAAM,EAAKpD,MAAMM,cAAX,sBAA6B,EAAKN,MAAMa,MAAMqC,MAAM,EAAGU,IAAvD,YAAkE,EAAK5D,MAAMa,MAAMqC,MAAMU,EAAQ,QAAzI,gBAIN,kBAAC9B,EAAA,EAAMqC,OAAP,KAAc,kBAACrC,EAAA,EAAMG,IAAP,KACZ,kBAACH,EAAA,EAAMI,WAAP,KACE,kBAACU,EAAA,EAAD,CAAOC,OAAK,EAACE,YAAa,OAAS,EAAK/C,MAAMgD,KAAMG,MAAO,EAAK1B,MAAMC,OAAQa,SAAU,SAACC,GAAD,OAAW,EAAKZ,SAAS,CAAEF,OAAQc,EAAME,OAAOS,YAE1I,kBAACrB,EAAA,EAAMI,WAAP,CAAkBsB,YAAU,GAC1B,kBAACzD,EAAD,CAAUuD,UAAQ,EAACT,OAAK,EAACO,QAAS,EAAK5B,UAAW+B,SAAgC,KAAtB,EAAK9B,MAAMC,QAAgB,WAAa,EAAK1B,MAAMgD,OAEjH,kBAAClB,EAAA,EAAMI,WAAP,KACE,kBAACnC,EAAD,CAAUmE,UAAQ,EAACrB,OAAK,EAACO,QAAS,kBAAM,EAAKpD,MAAMM,cAAc,KAAKiD,SAAsC,IAA5B,EAAKvD,MAAMa,MAAMoD,QAAjG,mBA3EJ,EAAKxC,MAAQ,CAAEgB,SAAU,GAAIf,OAAQ,IACrC,EAAKX,aAAeqD,IAAMC,YAHT,EADrB,UAAgCC,a,kBCFzB,SAASC,EAAKvE,GAAQ,IACjBwE,EAAmBxE,EAAnBwE,SAAUC,EAASzE,EAATyE,MAElB,SAASC,EAAUC,EAAMC,GAErB,GADAD,EAAKC,MAAQA,EACM,OAAfD,EAAKE,MAAT,CAIA,GAAmB,OAAfF,EAAKG,MAKL,OAJAH,EAAKI,SAAW,CAACJ,EAAKE,OACtBF,EAAKE,MAAMG,cAAe,EAC1BL,EAAKE,MAAMI,aAAc,OACzBP,EAAUC,EAAKE,MAAOD,EAAQ,GAGlC,GAAqB,MAAjBD,EAAKO,KAAK,GAGV,OAFAR,EAAUC,EAAKE,MAAOD,QACtBF,EAAUC,EAAKG,MAAOF,GAI1B,IAAIO,EAAYR,EAAKE,MAIrB,IAHAF,EAAKI,SAAW,CAACJ,EAAKG,OACtBH,EAAKG,MAAME,cAAe,EAC1BL,EAAKG,MAAMG,aAAc,EACI,MAAtBE,EAAUD,KAAK,IAClBP,EAAKI,SAAL,CAAiBI,EAAUL,OAA3B,mBAAqCH,EAAKI,WAC1CI,EAAUL,MAAME,cAAe,EAC/BG,EAAUL,MAAMG,aAAc,EAC9BE,EAAYA,EAAUN,MAE1BF,EAAKS,KAAOD,EAAUC,KACtBT,EAAKI,SAAL,CAAiBI,GAAjB,mBAA+BR,EAAKI,WACpCI,EAAUH,cAAe,EACzBG,EAAUF,aAAc,EAExBP,EAAUC,EAAKE,MAAOD,EAAQ,GAC9BF,EAAUC,EAAKG,MAAOF,EAAQ,QAhC1BD,EAAKI,SAAW,GAmCxBL,CAAUF,EAAU,GAMpB,IAJA,IAAIa,EAAQ,CAACb,GACTc,EAAO,GACPC,EAAY,GACZC,EAAI,EACDA,EAAIH,EAAMpB,QAAQ,MACQwB,IAAzBH,EAAKD,EAAMG,GAAGZ,SACdU,EAAKD,EAAMG,GAAGZ,OAAS,qCACvBW,EAAUF,EAAMG,GAAGZ,OAAS,GAEP,MAArBS,EAAMG,GAAGN,KAAK,KACVK,EAAUF,EAAMG,GAAGZ,OAASS,EAAMG,GAAGJ,OACrCE,EAAKD,EAAMG,GAAGZ,OAAS,oCAAGU,EAAKD,EAAMG,GAAGZ,OAAO,wBAAIc,QAASL,EAAMG,GAAGJ,KAAOG,EAAUF,EAAMG,GAAGZ,WACnGU,EAAKD,EAAMG,GAAGZ,OAAU,oCACnBU,EAAKD,EAAMG,GAAGZ,OAAO,wBAAIf,IAAK2B,EAAGE,QAASL,EAAMG,GAAGG,GAAKN,EAAMG,GAAGJ,KAAM/C,MAAO,CAACuD,UAAW,SAAUC,cAAe,MAAOC,QAAS,MAC5G,IAAnBT,EAAMG,GAAGZ,MAAc,qCAAQ,2BAAOvC,MAAO,CAAC0D,MAAO,OAAQC,OAAQ,MAAOC,cAAe,MAAM,+BAAO,4BACrG,wBAAI5D,MAAO,CAAC0D,MAAO,MAAOG,UAAWb,EAAMG,GAAGR,aAAe,OAAS,YAAamB,YAAa,eAChG,wBAAI9D,MAAO,CAAC0D,MAAO,MAAOG,UAAWb,EAAMG,GAAGP,YAAc,OAAS,kBAEzE,sCAA0C,IAA7BI,EAAMG,GAAGT,SAASd,QAAgBQ,EAAKR,OAAS,EAAKoB,EAAMG,GAAGN,KAAKhC,MAAMuB,EAAKR,QAASQ,EAAKR,QAAUoB,EAAMG,GAAGN,KAA5H,UAC8B,IAA7BG,EAAMG,GAAGT,SAASd,OAAe,qCAAQ,2BAAO5B,MAAO,CAAC0D,MAAO,OAAQC,OAAQ,MAAOC,cAAe,MAAM,+BAAO,4BAC/G,wBAAI5D,MAAO,CAAC0D,MAAO,MAAOI,YAAa,eACvC,wBAAI9D,MAAO,CAAC0D,MAAO,cAI/BR,EAAUF,EAAMG,GAAGZ,OAASS,EAAMG,GAAGG,IArBpB,oBAuBHN,EAAMG,GAAGT,UAvBN,IAuBrB,gCAASqB,EAAT,QACIf,EAAMgB,KAAKD,IAxBM,8BAyBrBZ,IAGJ,OAAO,2BAAOnD,MAAO,CAACiE,OAAQ,OAAQL,cAAe,MACjD,+BAAQX,EAAK5B,KAAI,SAAC6C,EAAKC,GAAN,OAAmB,wBAAI3C,IAAK2C,GAAWD,QCzEzD,SAASE,EAAWzG,GAEzB,IAFgC,EAE5B0G,EAAc,GAFc,cAGf1G,EAAM2G,OAHS,IAGhC,2BAA8B,CAAC,IAAD,EACtBC,EADsB,QACLjG,MAAM,QACvBkG,EAAWD,EAAU,GAFC,cAGNA,EAAU,GAAGjG,MAAM,QAHb,IAG5B,2BAAiD,CAAC,IAAzCmG,EAAwC,QAC/CJ,EAAYL,KAAK,CAACQ,EAAUC,KAJF,gCAHE,8BAYhC,IAAIC,EAAc,GAClBL,EAAYM,SAAQ,SAACC,EAAMC,GACzB,IAAMrG,EAAQoG,EAAK,GAAGtG,MAAM,KAC5B,GAAqB,IAAjBE,EAAMoD,OACR8C,EAAYV,KAAK,CAACY,EAAK,GAAIpG,EAAM,GAAI,SAChC,CACL,IAAIsG,EAAUtG,EAAM,GACpBA,EAAMqC,MAAM,GAAI,GAAG8D,SAAQ,SAACrD,EAAMyD,GAChC,IAAMC,EAAO,WAAOH,EAAP,YAAoBE,GACjCL,EAAYV,KAAK,CAACgB,EAASF,EAASxD,IACpCwD,EAAUE,KAEZN,EAAYV,KAAK,CAACY,EAAK,GAAIE,EAAStG,EAAMA,EAAMoD,OAAS,SAK7D,IAAMqD,EAAS,SAACnC,GAGd,IAFA,IAAIE,EAAQ,CAACF,GACTK,EAAI,EACDA,EAAIH,EAAMpB,QAAQ,CAAC,IAAD,gBACN8C,GADM,IACvB,gCAASE,EAAT,QACMA,EAAK,KAAO5B,EAAMG,GAAGN,MAAoB,KAAZ+B,EAAK,IACpC5B,EAAMgB,KAAK,CAAEnB,KAAM+B,EAAK,GAAIpC,MAAOQ,EAAMG,GAAIV,MAAO,KAAMM,KAAMD,EAAUC,KAAMO,GAAIR,EAAUQ,MAH3E,8BAIvBH,IAEF,OAAOH,GAGHX,EAAY,SAAZA,EAAaC,GACjB,OAAmB,OAAfA,EAAKE,MACA,oCAA0B,IAAtB7E,EAAMyE,KAAKR,OAAgBU,EAAKO,KAAOP,EAAKO,KAAKhC,MAAMlD,EAAMyE,KAAKR,QAASjE,EAAMyE,KAAKR,SAChF,OAAfU,EAAKG,MACA,wCAAG,6BAAK,4BAAKH,EAAKO,OAAlB,IAAoCR,EAAUC,EAAKE,OAAnD,KACY,MAAjBF,EAAKO,KAAK,GACL,oCAAGR,EAAUC,EAAKE,OAAlB,IAA2BH,EAAUC,EAAKG,QAC5C,wCAAG,6BAAK,4BAAKH,EAAKO,OAAlB,IAAoCR,EAAUC,EAAKE,OAAnD,IAA4DH,EAAUC,EAAKG,OAA3E,MAGLyC,EAAU,GACVC,EAAQ,GAwBZ,OAvBAxH,EAAMyH,QAAQT,SAAQ,SAACU,EAAQ9D,GAG7B,IAFA,IAAM+D,EAAQD,EAAO/G,MAAM,KACvBiH,EAAI,GACCC,EAAI,EAAGA,GAAKF,EAAM1D,OAAQ4D,IAAK,CACtCD,EAAEC,EAAI,GAAK,GACXD,EAAEC,EAAI,GAAGA,GAAKP,EAAO,CAACpC,KAAMlF,EAAMyE,KAAOkD,EAAME,EAAI,GAAK7H,EAAMyE,KAAMI,MAAO,KAAMC,MAAO,KAAMM,KAAMyC,EAAI,EAAGlC,GAAIkC,IAC/G,IAAK,IAAIrC,EAAIqC,EAAI,EAAGrC,GAAK,EAAGA,IAAK,CAC/BoC,EAAEpC,GAAGqC,GAAK,GACV,IAAK,IAAIC,EAAItC,EAAI,EAAGsC,EAAID,EAAGC,IAA3B,qBACmBf,GADnB,2BACWE,EADX,sBAEsBW,EAAEpC,GAAGsC,GAAGC,QAAO,SAACpD,GAAD,OAAUA,EAAKO,OAAS+B,EAAK,OAFlE,IAEI,kCAASpC,EAAT,sBACoB+C,EAAEE,GAAGD,GAAGE,QAAO,SAACpD,GAAD,OAAUA,EAAKO,OAAS+B,EAAK,OADhE,IACE,kCAASnC,EAAT,SACE,EAAA8C,EAAEpC,GAAGqC,IAAGxB,KAAR,oBAAgBiB,EAAO,CAACpC,KAAM+B,EAAK,GAAIpC,MAAOA,EAAOC,MAAOA,EAAOM,KAAMI,EAAGG,GAAIkC,OAFpF,0BAAAG,MAFJ,0BAAAA,MACE,+BADF,0BAAAA,OAOJT,EAAQ3D,GAAS,GACjB4D,EAAM5D,GAAS,GAhBwB,oBAiBtBgE,EAAE,GAAGD,EAAM1D,QAAQ8D,QAAO,SAACpD,GAAD,OAAUA,EAAKO,OAASlF,EAAMiI,SAjBlC,IAiBvC,2BAAgF,CAAC,IAAxEtD,EAAuE,QAC9E4C,EAAQ3D,GAAOyC,KAAK3B,EAAUC,IAC9B6C,EAAM5D,GAAOyC,KAAK,kBAAC9B,EAAD,CAAMC,SAAUG,EAAMF,KAAMzE,EAAMyE,SAnBf,kCAuBlC,kBAACyD,EAAA,EAAIC,KAAL,KACL,kBAACrG,EAAA,EAAD,CAAOC,QAAQ,QAIb,kBAACD,EAAA,EAAM2B,KAAP,KAAazD,EAAMyH,QAAQ/D,KAAI,SAACgE,EAAQU,GAAT,OAC7B,kBAAC,WAAD,CAAUvE,IAAKuE,GACb,kBAACtG,EAAA,EAAMG,IAAP,CAAWqB,SAAUiE,EAAQa,GAAanE,OAAS,EAAGC,SAA0C,IAAhCqD,EAAQa,GAAanE,QACnF,kBAACnC,EAAA,EAAMgC,KAAP,KAAa4D,GACb,kBAAC5F,EAAA,EAAMgC,KAAP,KAA6C,IAAhCyD,EAAQa,GAAanE,OAAe,KAAOsD,EAAQa,GAAanE,OAA7E,UAA4H,IAAhCsD,EAAQa,GAAanE,OAAe,GAAK,MAEtIsD,EAAQa,GAAa1E,KAAI,SAAChD,EAAQ2H,GAAT,OAAyB,kBAACvG,EAAA,EAAMG,IAAP,CAAW4B,IAAKwE,GACjE,kBAACvG,EAAA,EAAMgC,KAAP,KAAapD,GACb,kBAACoB,EAAA,EAAMgC,KAAP,CAAYN,YAAU,GAAC,kBAAC8E,EAAA,EAAD,CAAOnI,OAAK,EAACoI,KAAK,aAAaC,QAAS,kBAACzI,EAAD,kBAAgC0I,QAASjB,EAAMY,GAAaC,GAAcK,QAAS,CAAC,sBAK1JhC,EAAYzC,OAAS,EAAI,kBAAC0E,EAAA,EAAD,CAAWC,QAAM,EAAC/F,OAAK,EAACgG,oBAAqB,EAAGC,OAAQ,CAAC,CAACjF,IAAK,cAAekF,MAAO,+BAAgCN,QAAS,CAACA,QACvJ,kBAACO,EAAA,EAAD,KAAS,6BACNtC,EAAYhD,KAAI,SAAAuD,GAAI,gBAAOA,EAAK,GAAZ,eAAqBA,EAAK,OAAMgC,KAAK,aAEnD,sC,IClGMC,E,kDACnB,WAAYlJ,GAAQ,IAAD,8BACjB,cAAMA,IAIRmJ,kBAAoB,SAACC,GAAD,OAAc,EAAKxH,SAAS,CAAE+E,MAAOyC,KALtC,EAOnBC,oBAAsB,SAACC,GAAD,OAAgB,EAAK1H,SAAS,CAAE6F,QAAS6B,KAP5C,EASnBC,iBAAmB,SAACC,EAAD,OAAMrG,EAAN,EAAMA,MAAN,OAAkB,EAAKvB,SAAS,CAAE6C,KAAMtB,KATxC,EAWnBsG,eAAiB,kBAAM,kBAACvB,EAAA,EAAIC,KAAL,KACrB,kBAACa,EAAA,EAAD,KAAS,kBAACA,EAAA,EAAQU,KAAT,KACP,kBAACV,EAAA,EAAQW,KAAT,uCAEE,kBAACC,EAAA,EAAD,CACIC,MAAO,6CAAkB,kBAACC,EAAA,EAAD,qBAAlB,KACPnH,KAAK,iBAAiBQ,MAAM,GAAG4G,QAA6B,KAApB,EAAKtI,MAAMgD,KAAalC,SAAU,EAAKgH,mBAJrF,SAOE,kBAACK,EAAA,EAAD,CACEC,MAAO,6EAAkD,kBAACC,EAAA,EAAD,uBAAlD,KACPnH,KAAK,iBAAiBQ,MAAM,IAAI4G,QAA6B,MAApB,EAAKtI,MAAMgD,KAAclC,SAAU,EAAKgH,oBAGrF,kBAACP,EAAA,EAAQW,KAAT,uFAA6F,kBAACG,EAAA,EAAD,4CAA7F,OAEF,kBAAC,EAAD,CAAYjG,IAAI,OAAOb,KAAK,OAAOnC,MAAO,EAAKY,MAAMkF,MAAOrG,cAAe,EAAK6I,sBA3B/D,EA8BnBa,iBAAmB,kBAAM,kBAAC9B,EAAA,EAAIC,KAAL,KACvB,kBAACa,EAAA,EAAD,KAAS,kBAACA,EAAA,EAAQU,KAAT,KACP,kBAACV,EAAA,EAAQW,KAAT,sDAGF,kBAAC,EAAD,CAAY9F,IAAI,SAASb,KAAK,SAASnC,MAAO,EAAKY,MAAMgG,QAASnH,cAAe,EAAK+I,wBAnCrE,EAsCnBY,eAAiB,kBAAM,kBAAC/B,EAAA,EAAIC,KAAL,KACrB,kBAACvF,EAAA,EAAD,CAAOsH,cAAc,OAAO/G,MAAO,EAAK1B,MAAMwG,KAAM1F,SAAU,SAAAC,GAAK,OAAI,EAAKZ,SAAS,CAACqG,KAAMzF,EAAME,OAAOS,UAAS,kBAAC2G,EAAA,EAAD,qBAA2B,mCAvC5H,EA0CnBK,iBAAmB,kBAAM,kBAAC1D,EAAD,CAAYE,MAAO,EAAKlF,MAAMkF,MAAOc,QAAS,EAAKhG,MAAMgG,QAASQ,KAAM,EAAKxG,MAAMwG,KAAMxD,KAAM,EAAKhD,MAAMgD,QA1ChH,EA4CnB5C,OAAS,kBACP,kBAACuI,EAAA,EAAD,KACE,6BACA,kBAACpI,EAAA,EAAD,CAAQqI,GAAG,MAAX,cACA,kBAACnC,EAAA,EAAD,CAAKoC,MAAO,CACV,CAAEC,SAAU,YAAa1I,OAAQ,EAAK4H,gBACtC,CAAEc,SAAU,cAAe1I,OAAQ,EAAKmI,kBACxC,CAAEO,SAAU,mBAAoB1I,OAAQ,EAAKoI,gBAC7C,CAAEM,SAAU,QAAS1I,OAAQ,EAAKsI,qBAGpC,kBAACC,EAAA,EAAD,CAAWxE,UAAU,UAAS,6BAAM,kBAAC8D,EAAA,EAAD,CAAMc,MAAI,EAACC,YAAU,GAAC,kBAACf,EAAA,EAAKC,KAAN,2BArD5D,EAAKlI,MAAQ,CAACkF,MAAO,GAAIc,QAAS,GAAIQ,KAAM,IAAKxD,KAAM,IAFtC,E,UADYH,aCOboG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASlJ,OACP,kBAAC,IAAMmJ,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9a79c107.chunk.js","sourcesContent":["import React from 'react'\nimport { Button } from \"semantic-ui-react\";\n\nexport function MyButton(props) {\n    return <Button type=\"button\" basic {...props}/>\n}","import React, { Component } from \"react\"\nimport { Input, Button, Table } from 'semantic-ui-react'\nimport { MyButton } from './MyButton'\n\nexport class InputTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { fileName: \"\", newOne: \"\"}\n    this.refFileInput = React.createRef()\n  }\n\n  loadFile = () => {\n    this.props.onItemsChange([])\n    const reader = new FileReader()\n    reader.onload = () => {\n      for (let line of reader.result.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/))\n        if (line.split(\";\")[0] !== \"\")\n          this.props.onItemsChange([...this.props.items, line.split(\";\")[0]])\n    }\n    reader.readAsText(this.refFileInput.current.files[0])\n  }\n\n  loadGBKFile = () => {\n    this.props.onItemsChange([])\n    const reader = new FileReader()\n    reader.onload = () => {\n      const bytes = reader.result\n      const gbkDecoder = new TextDecoder('gbk')\n      const string = gbkDecoder.decode(bytes)\n      for (let line of string.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/))\n        if (line.split(\";\")[0] !== \"\")\n          this.props.onItemsChange([...this.props.items, line.split(\";\")[0]])\n    }\n    reader.readAsArrayBuffer(this.refFileInput.current.files[0])\n  }\n\n  addNewOne = () => {\n    if (this.state.newOne !== \"\" && !this.props.items.includes(this.state.newOne)) {\n      this.props.onItemsChange([...this.props.items, this.state.newOne])\n      this.setState({ newOne: \"\" })\n    }\n  }\n\n  render = () => <Table compact=\"very\">\n    <Table.Header><Table.Row>\n      <Table.HeaderCell>\n        <input ref={this.refFileInput} type=\"file\" accept=\"text/plain\" style={{ display: \"none\" }} onChange={(event) => this.setState({ fileName: event.target.files[0].name })} />\n        <Input fluid readOnly placeholder={this.props.kind[0].toUpperCase() + this.props.kind.slice(1) + \" file\"} value={this.state.fileName} onClick={() => this.refFileInput.current.click()} />\n      </Table.HeaderCell>\n      <Table.HeaderCell>\n        <MyButton positive fluid onClick={this.loadFile} disabled={this.state.fileName === \"\"}>{\"Load \" + this.props.kind + \" file\"}</MyButton>\n      </Table.HeaderCell>\n      <Table.HeaderCell collapsing>\n        <MyButton positive fluid onClick={this.loadGBKFile} disabled={this.state.fileName === \"\"}>{\"Load GBK \" + this.props.kind + \" file\"}</MyButton>\n      </Table.HeaderCell>\n    </Table.Row></Table.Header>\n    <Table.Body>\n      {this.props.items.map((item, index) => <Table.Row key={index}>\n        <Table.Cell>\n          <Input fluid value={item} onChange={(event) => this.props.onItemsChange([...this.props.items.slice(0, index), event.target.value, ...this.props.items.slice(index + 1)])}/>\n        </Table.Cell>\n        <Table.Cell>\n          <Button.Group>\n            <MyButton icon=\"angle double up\" onClick={() => this.props.onItemsChange([this.props.items[index], ...this.props.items.slice(0, index), ...this.props.items.slice(index + 1)])} disabled={index === 0}/>\n            <MyButton icon=\"angle up\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index - 1), this.props.items[index], this.props.items[index - 1], ...this.props.items.slice(index + 1)])} disabled={index === 0}/>\n            <MyButton icon=\"angle down\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), this.props.items[index + 1], this.props.items[index], ...this.props.items.slice(index + 2)])} disabled={index === this.props.items.length - 1}/>\n            <MyButton icon=\"angle double down\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), ...this.props.items.slice(index + 1), this.props.items[index]])} disabled={index === this.props.items.length - 1}/>\n          </Button.Group>\n        </Table.Cell>\n        <Table.Cell>\n          <MyButton negative fluid onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), ...this.props.items.slice(index + 1)])}>Remove</MyButton>\n        </Table.Cell>\n      </Table.Row>)}\n    </Table.Body>\n    <Table.Footer><Table.Row>\n      <Table.HeaderCell>\n        <Input fluid placeholder={\"New \" + this.props.kind} value={this.state.newOne} onChange={(event) => this.setState({ newOne: event.target.value })}/>\n      </Table.HeaderCell>\n      <Table.HeaderCell collapsing>\n        <MyButton positive fluid onClick={this.addNewOne} disabled={this.state.newOne === \"\"}>{\"Add new \" + this.props.kind}</MyButton>\n      </Table.HeaderCell>\n      <Table.HeaderCell>\n        <MyButton negative fluid onClick={() => this.props.onItemsChange([])} disabled={this.props.items.length === 0}>Remove all</MyButton>\n      </Table.HeaderCell>\n    </Table.Row></Table.Footer>\n  </Table>\n}","import React from 'react'\n\nexport function Tree(props) {\n    const { rootNode, quot } = props\n\n    function traceBack(node, depth) {\n        node.depth = depth\n        if (node.yNode === null) {\n            node.children = []\n            return\n        }\n        if (node.zNode === null) {\n            node.children = [node.yNode]\n            node.yNode.isFirstChild = true\n            node.yNode.isLastChild = true\n            traceBack(node.yNode, depth + 1)\n            return\n        }\n        if (node.xStr[0] === \"_\") {\n            traceBack(node.yNode, depth)\n            traceBack(node.zNode, depth)\n            return\n        }\n        \n        let firstNode = node.yNode\n        node.children = [node.zNode]\n        node.zNode.isFirstChild = false\n        node.zNode.isLastChild = true\n        while (firstNode.xStr[0] === \"_\") {\n            node.children = [firstNode.zNode, ...node.children]\n            firstNode.zNode.isFirstChild = false\n            firstNode.zNode.isLastChild = false\n            firstNode = firstNode.yNode\n        }\n        node.from = firstNode.from\n        node.children = [firstNode, ...node.children]\n        firstNode.isFirstChild = true\n        firstNode.isLastChild = false\n            \n        traceBack(node.yNode, depth + 1)\n        traceBack(node.zNode, depth + 1)\n    }\n\n    traceBack(rootNode, 0)\n\n    let nodes = [rootNode]\n    let rows = []\n    let rowsAtCol = []\n    let i = 0\n    while (i < nodes.length) {\n        if (rows[nodes[i].depth] === undefined) {\n            rows[nodes[i].depth] = <></>\n            rowsAtCol[nodes[i].depth] = 0\n        }\n        if (nodes[i].xStr[0] !== \"_\") {\n            if (rowsAtCol[nodes[i].depth] < nodes[i].from)\n                rows[nodes[i].depth] = <>{rows[nodes[i].depth]}<td colSpan={nodes[i].from - rowsAtCol[nodes[i].depth]}></td></>\n            rows[nodes[i].depth] = (<>\n                {rows[nodes[i].depth]}<td key={i} colSpan={nodes[i].to - nodes[i].from} style={{textAlign: \"center\", verticalAlign: \"top\", padding: \"0\"}}>\n                    {nodes[i].depth === 0 ? <></> : <table style={{width: \"100%\", height: \"1em\", borderSpacing: \"0\"}}><tbody><tr>\n                        <td style={{width: \"50%\", borderTop: nodes[i].isFirstChild ? \"none\" : \"1px solid\", borderRight: \"1px solid\"}}></td>\n                        <td style={{width: \"50%\", borderTop: nodes[i].isLastChild ? \"none\" : \"1px solid\"}}></td>\n                    </tr></tbody></table>}\n                    <div>&emsp;{(nodes[i].children.length === 0 && quot.length > 0) ? nodes[i].xStr.slice(quot.length, -quot.length) : nodes[i].xStr}&emsp;</div>\n                    {nodes[i].children.length === 0 ? <></> : <table style={{width: \"100%\", height: \"1em\", borderSpacing: \"0\"}}><tbody><tr>\n                        <td style={{width: \"50%\", borderRight: \"1px solid\"}}></td>\n                        <td style={{width: \"50%\"}}></td>\n                    </tr></tbody></table>}\n                </td>\n            </>)\n            rowsAtCol[nodes[i].depth] = nodes[i].to\n        }\n        for (let child of nodes[i].children) \n            nodes.push(child)\n        i ++\n    }\n\n    return <table style={{margin: \"auto\", borderSpacing: \"0\"}}>\n        <tbody>{rows.map((row, rowIndex) => <tr key={rowIndex}>{row}</tr>)}</tbody>\n    </table>\n}","import React, { Fragment } from \"react\"\nimport { Accordion, Message, Modal, Tab, Table } from 'semantic-ui-react'\nimport { MyButton } from \"./MyButton\"\nimport { Tree } from \"./Tree\"\n\nexport function OutputPane(props) {\n  // complex to simple (without \"|\")\n  let simpleRules = []\n  for (let rule of props.rules) {\n    const ruleParts = rule.split(\" -> \")\n    const ruleLeft = ruleParts[0]\n    for (let ruleRight of ruleParts[1].split(\" | \")) {\n      simpleRules.push([ruleLeft, ruleRight])\n    }\n  }\n  \n  // multiple to binary\n  let binaryRules = []\n  simpleRules.forEach((rule, ruleIndex) => {\n    const items = rule[1].split(\" \")\n    if (items.length === 1) {\n      binaryRules.push([rule[0], items[0], \"\"])\n    } else {\n      let itemNow = items[0]\n      items.slice(1, -1).forEach((item, itemIndex) => {\n        const itemNew = `_${ruleIndex}_${itemIndex}`\n        binaryRules.push([itemNew, itemNow, item])\n        itemNow = itemNew\n      })\n      binaryRules.push([rule[0], itemNow, items[items.length - 1]])\n    }\n  })\n\n  // CKY-parse\n  const extend = (firstNode) => {\n    let nodes = [firstNode]\n    let i = 0\n    while (i < nodes.length) {\n      for (let rule of binaryRules)\n        if (rule[1] === nodes[i].xStr && rule[2] === \"\")\n          nodes.push({ xStr: rule[0], yNode: nodes[i], zNode: null, from: firstNode.from, to: firstNode.to })\n      i ++\n    }\n    return nodes\n  }\n\n  const traceBack = (node) => {\n    if (node.yNode === null)\n      return <>{(props.quot.length === 0) ? node.xStr : node.xStr.slice(props.quot.length, -props.quot.length)}</>\n    if (node.zNode === null)\n      return <>[<sub><em>{node.xStr}</em></sub> {traceBack(node.yNode)}]</>\n    if (node.xStr[0] === \"_\")\n      return <>{traceBack(node.yNode)} {traceBack(node.zNode)}</>\n    return <>[<sub><em>{node.xStr}</em></sub> {traceBack(node.yNode)} {traceBack(node.zNode)}]</>\n  }\n  \n  let results = []\n  let trees = []\n  props.samples.forEach((sample, index) => {\n    const words = sample.split(\" \")\n    let t = []\n    for (let j = 1; j <= words.length; j++) {\n      t[j - 1] = []\n      t[j - 1][j] = extend({xStr: props.quot + words[j - 1] + props.quot, yNode: null, zNode: null, from: j - 1, to: j})\n      for (let i = j - 2; i >= 0; i--) {\n        t[i][j] = []\n        for (let k = i + 1; k < j; k++)\n          for (let rule of binaryRules)\n            for (let yNode of t[i][k].filter((node) => node.xStr === rule[1]))\n              for (let zNode of t[k][j].filter((node) => node.xStr === rule[2]))\n                t[i][j].push(...extend({xStr: rule[0], yNode: yNode, zNode: zNode, from: i, to: j }))\n      }\n    }\n    results[index] = []\n    trees[index] = []\n    for (let node of t[0][words.length].filter((node) => node.xStr === props.root)) {\n      results[index].push(traceBack(node))\n      trees[index].push(<Tree rootNode={node} quot={props.quot}></Tree>)\n    }\n  })\n\n  return <Tab.Pane>\n    <Table compact=\"very\">\n      {/* <Table.Header><Table.Row>\n        <Table.HeaderCell colSpan=\"2\">Total: {props.samples.length} samples</Table.HeaderCell>\n      </Table.Row></Table.Header> */}\n      <Table.Body>{props.samples.map((sample, sampleIndex) =>\n        <Fragment key={sampleIndex}>\n          <Table.Row positive={results[sampleIndex].length > 0} negative={results[sampleIndex].length === 0}>\n            <Table.Cell>{sample}</Table.Cell>\n            <Table.Cell>{results[sampleIndex].length === 0 ? \"No\" : results[sampleIndex].length} result{results[sampleIndex].length === 1 ? \"\" : \"s\"}</Table.Cell>\n          </Table.Row>\n          {results[sampleIndex].map((result, resultIndex) => <Table.Row key={resultIndex}>\n            <Table.Cell>{result}</Table.Cell>\n            <Table.Cell collapsing><Modal basic size=\"fullscreen\" trigger={<MyButton>Show tree</MyButton>} content={trees[sampleIndex][resultIndex]} actions={['Close']} /></Table.Cell>\n          </Table.Row>)}\n        </Fragment>)}\n      </Table.Body>\n    </Table>\n    {simpleRules.length > 0 ? <Accordion styled fluid defaultActiveIndex={-1} panels={[{key: 'simpleRules', title: 'Rules without vertical lines', content: {content: (\n      <Message><pre>\n        {simpleRules.map(rule => `${rule[0]} -> ${rule[1]}`).join('\\n')}\n      </pre></Message>\n    )}}]} /> : <></>}\n  </Tab.Pane>\n}","import React, { Component } from 'react'\nimport { Container, Header, Input, List, Message, Tab, Radio, Label } from 'semantic-ui-react'\nimport { InputTable } from \"./InputTable\"\nimport { OutputPane } from \"./OutputPane\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {rules: [], samples: [], root: \"S\", quot: ''}\n  }\n\n  handleRulesChange = (newRules) => this.setState({ rules: newRules })\n\n  handleSamplesChange = (newSamples) => this.setState({ samples: newSamples })\n\n  handleQuotChange = (e, { value }) => this.setState({ quot: value })\n\n  rulePaneRender = () => <Tab.Pane>\n    <Message><Message.List>\n      <Message.Item>\n        Non-terminal symbols are:&emsp;\n        <Radio\n            label={<label>bare, e.g. <Label>{`DP -> the NP`}</Label>.</label>}\n            name='quotRadioGroup' value='' checked={this.state.quot === ''} onChange={this.handleQuotChange}\n        />\n        &emsp;\n        <Radio\n          label={<label>wrapped in ASCII quotation marks (\"), e.g. <Label>{`DP -> \"the\" NP`}</Label>.</label>}\n          name='quotRadioGroup' value='\"' checked={this.state.quot === '\"'} onChange={this.handleQuotChange}\n        />\n      </Message.Item>\n      <Message.Item>Rules with the same left-hand side can be joined with vertical lines (|), e.g. <Label>{`NP -> N | AdjP N | N PP | AdjP N PP`}</Label>.</Message.Item>\n    </Message.List></Message>\n    <InputTable key=\"rule\" kind=\"rule\" items={this.state.rules} onItemsChange={this.handleRulesChange} />\n  </Tab.Pane>\n\n  samplePaneRender = () => <Tab.Pane>\n    <Message><Message.List>\n      <Message.Item>Terminal symbols should be space-separated.</Message.Item>\n      {/* <Message.Item>Terminal symbols should be space-separated, e.g. <Label>王冕 死 了 父亲</Label>.</Message.Item> */}\n    </Message.List></Message>\n    <InputTable key=\"sample\" kind=\"sample\" items={this.state.samples} onItemsChange={this.handleSamplesChange} />\n  </Tab.Pane>\n\n  rootPaneRender = () => <Tab.Pane>\n    <Input labelPosition='left' value={this.state.root} onChange={event => this.setState({root: event.target.value})}><Label>Start symbol</Label><input /></Input>\n  </Tab.Pane>\n\n  resultPaneRender = () => <OutputPane rules={this.state.rules} samples={this.state.samples} root={this.state.root} quot={this.state.quot} />\n\n  render = () =>\n    <Container>\n      <br />\n      <Header as=\"h1\">CFG parser</Header>\n      <Tab panes={[\n        { menuItem: \"Set rules\", render: this.rulePaneRender },\n        { menuItem: \"Set samples\", render: this.samplePaneRender },\n        { menuItem: \"Set start symbol\", render: this.rootPaneRender },\n        { menuItem: \"Parse\", render: this.resultPaneRender }\n      ]} />\n      \n      <Container textAlign='center'><br /><List link horizontal><List.Item>Version 201025</List.Item></List></Container>\n      \n    </Container>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}