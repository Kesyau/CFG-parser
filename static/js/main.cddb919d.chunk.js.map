{"version":3,"sources":["MyButton.js","InputPane.js","Tree.js","OutputPane.js","App.js","serviceWorker.js","index.js"],"names":["MyButton","props","Button","type","basic","InputPane","loadFile","onItemsChange","reader","FileReader","onload","result","split","line","items","readAsText","refFileInput","current","files","addNewOne","state","newOne","includes","setState","render","Tab","Pane","children","ref","accept","style","display","onChange","event","fileName","target","name","Table","compact","Header","Row","HeaderCell","Input","fluid","readOnly","placeholder","kind","toUpperCase","slice","value","onClick","click","collapsing","positive","disabled","negative","length","Body","map","item","index","key","Cell","Group","icon","Footer","React","createRef","Component","Tree","rootNode","max","traceBack","node","depth","yNode","zNode","isFirstChild","isLastChild","xStr","firstNode","from","nodes","rows","rowsAtCol","i","undefined","colSpan","to","textAlign","verticalAlign","padding","width","height","borderSpacing","borderTop","borderRight","child","push","margin","row","rowIndex","OutputPane","simpleRules","rules","ruleParts","ruleLeft","ruleRight","binaryRules","forEach","rule","ruleIndex","itemNow","itemIndex","itemNew","extend","results","trees","samples","sample","words","t","j","k","filter","f","root","sampleIndex","resultIndex","Modal","size","trigger","content","actions","App","isTerm","getTerm","handleRulesChange","newRules","handleSamplesChange","newSamples","rulePaneRender","Message","header","list","samplePaneRender","rootPaneRender","label","resultPaneRender","Container","as","panes","menuItem","List","link","horizontal","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cddb919d.chunk.js","sourcesContent":["import React from 'react'\nimport { Button } from \"semantic-ui-react\";\n\nexport function MyButton(props) {\n    return <Button type=\"button\" basic {...props}/>\n}","import React, { Component } from \"react\"\nimport { Input, Button, Table, Tab } from 'semantic-ui-react'\nimport { MyButton } from './MyButton'\n\nexport class InputPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { fileName: \"\", newOne: \"\" }\n    this.refFileInput = React.createRef()\n  }\n\n  loadFile = () => {\n    this.props.onItemsChange([]) \n    const reader = new FileReader()\n    reader.onload = () => {\n      for (let line of reader.result.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/))\n        if (line !== \"\")\n          this.props.onItemsChange([...this.props.items, line])\n    }\n    reader.readAsText(this.refFileInput.current.files[0])\n  }\n\n  addNewOne = () => {\n    if (this.state.newOne !== \"\" && !this.props.items.includes(this.state.newOne)) {\n      this.props.onItemsChange([...this.props.items, this.state.newOne])\n      this.setState({ newOne: \"\" })\n    }\n  }\n\n  render = () => <Tab.Pane>\n    {this.props.children}\n    <input ref={this.refFileInput} type=\"file\" accept=\"text/plain\" style={{ display: \"none\" }} onChange={(event) => this.setState({ fileName: event.target.files[0].name })} />\n    <Table compact=\"very\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>\n            <Input fluid readOnly placeholder={this.props.kind[0].toUpperCase() + this.props.kind.slice(1) + \" file\"} value={this.state.fileName} onClick={() => this.refFileInput.current.click()}/>\n          </Table.HeaderCell>\n          <Table.HeaderCell collapsing>\n            <MyButton positive fluid onClick={this.loadFile} disabled={this.state.fileName === \"\"}>{\"Load \" + this.props.kind + \" file\"}</MyButton>\n          </Table.HeaderCell>\n          <Table.HeaderCell collapsing>\n            <MyButton negative fluid onClick={() => this.props.onItemsChange([])} disabled={this.props.items.length === 0}>Remove all</MyButton>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {this.props.items.map((item, index) => <Table.Row key={index}>\n          <Table.Cell>\n            <Input fluid value={item} onChange={(event) => this.props.onItemsChange([...this.props.items.slice(0, index), event.target.value, ...this.props.items.slice(index + 1)])}/>\n          </Table.Cell>\n          <Table.Cell>\n            <Button.Group>\n              <MyButton icon=\"angle double up\" onClick={() => this.props.onItemsChange([this.props.items[index], ...this.props.items.slice(0, index), ...this.props.items.slice(index + 1)])} disabled={index === 0}/>\n              <MyButton icon=\"angle up\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index - 1), this.props.items[index], this.props.items[index - 1], ...this.props.items.slice(index + 1)])} disabled={index === 0}/>\n              <MyButton icon=\"angle down\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), this.props.items[index + 1], this.props.items[index], ...this.props.items.slice(index + 2)])} disabled={index === this.props.items.length - 1}/>\n              <MyButton icon=\"angle double down\" onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), ...this.props.items.slice(index + 1), this.props.items[index]])} disabled={index === this.props.items.length - 1}/>\n            </Button.Group>\n          </Table.Cell>\n          <Table.Cell>\n            <MyButton negative fluid onClick={() => this.props.onItemsChange([...this.props.items.slice(0, index), ...this.props.items.slice(index + 1)])}>Remove</MyButton>\n          </Table.Cell>\n        </Table.Row>)}\n      </Table.Body>\n      <Table.Footer>\n        <Table.Row>\n          <Table.HeaderCell>\n            <Input fluid placeholder={\"New \" + this.props.kind} value={this.state.newOne} onChange={(event) => this.setState({ newOne: event.target.value })}/>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <MyButton positive fluid onClick={this.addNewOne} disabled={this.state.newOne === \"\"}>{\"Add new \" + this.props.kind}</MyButton>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <MyButton negative fluid onClick={() => this.props.onItemsChange([])} disabled={this.props.items.length === 0}>Remove all</MyButton>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  </Tab.Pane>\n}","import React from 'react'\n\nexport function Tree(props) {\n    const rootNode = props.rootNode\n\n    function max(...items) {\n        let max = 0\n        for (let item of items)\n            if (item > max)\n                max = item\n        return max\n    }\n\n    function traceBack(node, depth) {\n        node.depth = depth\n        if (node.yNode === null) {\n            node.children = []\n            return depth\n        }\n        if (node.zNode === null) {\n            node.children = [node.yNode]\n            node.yNode.isFirstChild = true\n            node.yNode.isLastChild = true\n            return max(depth, traceBack(node.yNode, depth + 1))\n        }\n        if (node.xStr[0] === \"_\")\n            return max(depth, traceBack(node.yNode, depth), traceBack(node.zNode, depth))\n        \n        let firstNode = node.yNode\n        node.children = [node.zNode]\n        node.zNode.isFirstChild = false\n        node.zNode.isLastChild = true\n        while (firstNode.xStr[0] === \"_\") {\n            node.children = [firstNode.zNode, ...node.children]\n            firstNode.zNode.isFirstChild = false\n            firstNode.zNode.isLastChild = false\n            firstNode = firstNode.yNode\n        }\n        node.from = firstNode.from\n        node.children = [firstNode, ...node.children]\n        firstNode.isFirstChild = true\n        firstNode.isLastChild = false\n            \n        return max(depth, traceBack(node.yNode, depth + 1), traceBack(node.zNode, depth + 1))\n    }\n\n    const maxDepth = traceBack(rootNode, 0)\n\n    let nodes = [rootNode]\n    let rows = []\n    let rowsAtCol = []\n    let i = 0\n    while (i < nodes.length) {\n        if (rows[nodes[i].depth] === undefined) {\n            rows[nodes[i].depth] = <></>\n            rowsAtCol[nodes[i].depth] = 0\n        }\n        if (nodes[i].xStr[0] !== \"_\") {\n            if (rowsAtCol[nodes[i].depth] < nodes[i].from)\n                rows[nodes[i].depth] = <>{rows[nodes[i].depth]}<td colSpan={nodes[i].from - rowsAtCol[nodes[i].depth]}></td></>\n            rows[nodes[i].depth] = (<>\n                {rows[nodes[i].depth]}<td key={i} colSpan={nodes[i].to - nodes[i].from} style={{textAlign: \"center\", verticalAlign: \"top\", padding: \"0\"}}>\n                    {nodes[i].depth === 0 ? <></> : <table style={{width: \"100%\", height: \"1em\", borderSpacing: \"0\"}}><tbody><tr>\n                        <td style={{width: \"50%\", borderTop: nodes[i].isFirstChild ? \"none\" : \"1px solid\", borderRight: \"1px solid\"}}></td>\n                        <td style={{width: \"50%\", borderTop: nodes[i].isLastChild ? \"none\" : \"1px solid\"}}></td>\n                    </tr></tbody></table>}\n                    <div>&emsp;{nodes[i].children.length === 0 ? nodes[i].xStr.slice(1, -1) : nodes[i].xStr}&emsp;</div>\n                    {nodes[i].children.length === 0 ? <></> : <table style={{width: \"100%\", height: \"1em\", borderSpacing: \"0\"}}><tbody><tr><td style={{width: \"50%\", borderRight: \"1px solid\"}}></td><td style={{width: \"50%\"}}></td></tr></tbody></table>}\n                </td>\n            </>)\n            rowsAtCol[nodes[i].depth] = nodes[i].to\n        }\n        for (let child of nodes[i].children) \n            nodes.push(child)\n        i ++\n    }\n\n    return <table style={{margin: \"auto\", borderSpacing: \"0\"}}>\n        <tbody>{rows.map((row, rowIndex) => <tr key={rowIndex}>{row}</tr>)}</tbody>\n    </table>\n}","import React, { Fragment } from \"react\"\nimport { Modal, Tab, Table } from 'semantic-ui-react'\nimport { MyButton } from \"./MyButton\"\nimport { Tree } from \"./Tree\"\n\nexport function OutputPane(props) {\n  // complex to simple (without \"|\")\n  let simpleRules = []\n  for (let rule of props.rules) {\n    const ruleParts = rule.split(\" -> \")\n    const ruleLeft = ruleParts[0]\n    for (let ruleRight of ruleParts[1].split(\" | \")) {\n      simpleRules.push([ruleLeft, ruleRight])\n    }\n  }\n  \n  // multiple to binary\n  let binaryRules = []\n  simpleRules.forEach((rule, ruleIndex) => {\n    const items = rule[1].split(\" \")\n    if (items.length === 1) {\n      binaryRules.push([rule[0], items[0], \"\"])\n    } else {\n      let itemNow = items[0]\n      items.slice(1, -1).forEach((item, itemIndex) => {\n        const itemNew = `_${ruleIndex}_${itemIndex}`\n        binaryRules.push([itemNew, itemNow, item])\n        itemNow = itemNew\n      })\n      binaryRules.push([rule[0], itemNow, items[items.length - 1]])\n    }\n  })\n\n  // CKY-parse\n  const extend = (firstNode) => {\n    let nodes = [firstNode]\n    let i = 0\n    while (i < nodes.length) {\n      for (let rule of binaryRules)\n        if (rule[1] === nodes[i].xStr && rule[2] === \"\")\n          nodes.push({ xStr: rule[0], yNode: nodes[i], zNode: null, from: firstNode.from, to: firstNode.to })\n      i ++\n    }\n    return nodes\n  }\n\n  const traceBack = (node) => {\n    if (node.yNode === null)\n      return <>{node.xStr.slice(1, -1)}</>\n    if (node.zNode === null)\n      return <>[<sub><em>{node.xStr}</em></sub> {traceBack(node.yNode)}]</>\n    if (node.xStr[0] === \"_\")\n      return <>{traceBack(node.yNode)} {traceBack(node.zNode)}</>\n    return <>[<sub><em>{node.xStr}</em></sub> {traceBack(node.yNode)} {traceBack(node.zNode)}]</>\n  }\n  \n  let results = []\n  let trees = []\n  props.samples.forEach((sample, index) => {\n    const words = sample.split(\" \")\n    let t = []\n    for (let j = 1; j <= words.length; j++) {\n      t[j - 1] = []\n      t[j - 1][j] = extend({xStr: `\"${words[j - 1]}\"`, yNode: null, zNode: null, from: j - 1, to: j})\n      for (let i = j - 2; i >= 0; i--) {\n        t[i][j] = []\n        for (let k = i + 1; k < j; k++)\n          for (let rule of binaryRules)\n            for (let yNode of t[i][k].filter((node) => node.xStr === rule[1]))\n              for (let zNode of t[k][j].filter((node) => node.xStr === rule[2]))\n                t[i][j].push(...extend({xStr: rule[0], yNode: yNode, zNode: zNode, from: i, to: j }))\n      }\n    }\n    results[index] = []\n    trees[index] = []\n    for (let node of t[0][words.length].filter((node) => node.xStr === props.root)) {\n      results[index].push(traceBack(node))\n      trees[index].push(<Tree rootNode={node}></Tree>)\n    }\n  })\n\n  return <Tab.Pane>\n    {/* <Header as=\"h2\">Simple rules</Header>\n    <List>{simpleRules.map((item, index) => <List.Item key={index}>{`(${index}) ${item[0]} -> ${item[1]}`}</List.Item>)}</List>\n    <Header as=\"h2\">Binary rules</Header>\n    <List>{binaryRules.map((item, index) => <List.Item key={index}>{`${item[0]} -> ${item[1]} ${item[2]}`}</List.Item>)}</List> */}\n    <Table compact=\"very\">\n      {/* <Table.Header><Table.Row>\n        <Table.HeaderCell colSpan=\"2\">Total: {props.samples.length} samples</Table.HeaderCell>\n      </Table.Row></Table.Header> */}\n      <Table.Body>{props.samples.map((sample, sampleIndex) =>\n        <Fragment key={sampleIndex}>\n          <Table.Row positive={results[sampleIndex].length > 0} negative={results[sampleIndex].length === 0}>\n            <Table.Cell>{sample}</Table.Cell>\n            <Table.Cell>{results[sampleIndex].length === 0 ? \"No\" : results[sampleIndex].length} result{results[sampleIndex].length === 1 ? \"\" : \"s\"}</Table.Cell>\n          </Table.Row>\n          {results[sampleIndex].map((result, resultIndex) => <Table.Row key={resultIndex}>\n            <Table.Cell>{result}</Table.Cell>\n            <Table.Cell><Modal basic size=\"fullscreen\" trigger={<MyButton>Show tree</MyButton>} content={trees[sampleIndex][resultIndex]} actions={['Close']} /></Table.Cell>\n          </Table.Row>)}\n        </Fragment>)}\n      </Table.Body>\n    </Table>\n  </Tab.Pane>\n}","import React, { Component } from 'react'\nimport { Container, Divider, Header, Input, List, Message, Tab } from 'semantic-ui-react'\nimport { InputPane } from \"./InputPane\"\nimport { OutputPane } from \"./OutputPane\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      rules: [],\n      samples: [],\n      root: \"S\"\n    }\n  }\n\n  isTerm = item => item[0] === \"\\\"\" && item[item.length - 1] === \"\\\"\"\n\n  getTerm = item => item.slice(1, item.length - 1)\n\n  handleRulesChange = (newRules) => {\n    this.setState({ rules: newRules })\n  }\n\n  handleSamplesChange = (newSamples) => {\n    this.setState({ samples: newSamples })\n  }\n\n  rulePaneRender = () => <InputPane key=\"rule\" kind=\"rule\" items={this.state.rules} onItemsChange={this.handleRulesChange}>\n    <Message header=\"N.b.\" list={[\n      <li key=\"0\">Non-terminal symbols should be wrapped in ASCII quotation marks (\"), e.g. <code>{`DP -> \"the\" NP`}</code>.</li>, \n      <li key=\"1\">Multiple rules with the same left-hand side can be joined with vertical lines (|), e.g. <code>{`NP -> N | AdjP N | N PP | AdjP N PP`}</code>.</li>\n    ]}/>\n  </InputPane>\n\n  samplePaneRender = () => <InputPane key=\"sample\" kind=\"sample\" items={this.state.samples} onItemsChange={this.handleSamplesChange}>\n    <Message header=\"N.b.\" list={[<li key=\"0\">Terminal symbols should be space-separated, e.g. <code>王冕 死 了 父亲</code>.</li>]}/>\n  </InputPane>\n\n  rootPaneRender = () => <Tab.Pane>\n    <Input label=\"Start symbol\" value={this.state.root} onChange={event => this.setState({root: event.target.value})}/>\n  </Tab.Pane>\n\n  resultPaneRender = () => <OutputPane rules={this.state.rules} samples={this.state.samples} root={this.state.root}/>\n\n  render = () =>\n    <Container>\n      <br />\n      <Header as=\"h1\">CFG parser</Header>\n      <Tab panes={[\n        { menuItem: \"Set rules\", render: this.rulePaneRender },\n        { menuItem: \"Set samples\", render: this.samplePaneRender },\n        { menuItem: \"Set start symbol\", render: this.rootPaneRender },\n        { menuItem: \"Parse\", render: this.resultPaneRender }\n      ]} />\n      \n      <Container textAlign='center'><br /><List link horizontal items={[\"Version 201009\"]} /></Container>\n      \n    </Container>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}